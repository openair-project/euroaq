[{"path":[]},{"path":"https://openair-project.github.io/euroaq/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, colour, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://openair-project.github.io/euroaq/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behaviour contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behaviour include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://openair-project.github.io/euroaq/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://openair-project.github.io/euroaq/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://openair-project.github.io/euroaq/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible via GitHub platform. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://openair-project.github.io/euroaq/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://openair-project.github.io/euroaq/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behaviour deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behaviour inappropriate. public apology may requested.","code":""},{"path":"https://openair-project.github.io/euroaq/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behaviour. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://openair-project.github.io/euroaq/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behaviour. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://openair-project.github.io/euroaq/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://openair-project.github.io/euroaq/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://openair-project.github.io/euroaq/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to euroaq","title":"Contributing to euroaq","text":"outlines propose change euroaq.","code":""},{"path":"https://openair-project.github.io/euroaq/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to euroaq","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://openair-project.github.io/euroaq/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to euroaq","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex.","code":""},{"path":"https://openair-project.github.io/euroaq/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to euroaq","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"openair-project/euroaq\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header).","code":""},{"path":"https://openair-project.github.io/euroaq/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to euroaq","text":"Care taken new code follows style similar rest openair family. use roxygen2, Markdown syntax, documentation.","code":""},{"path":"https://openair-project.github.io/euroaq/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to euroaq","text":"Please note openair project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://openair-project.github.io/euroaq/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 euroaq authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://openair-project.github.io/euroaq/articles/euroaq.html","id":"downloading-data","dir":"Articles","previous_headings":"","what":"Downloading Data","title":"Importing EEA AQ Data with {euroaq}","text":"download data, may useful access key metadata. following functions available : import_eea_stations() accesses data flow D (station metadata). import_eea_pollutants() accesses pollutant names identifiers. import_eea_countries() accesses country names identifiers. import_eea_cities() accesses city names given country countries. functions return R data frames, making convenient analysis filtering. actually download data, may use import_eea_monitoring(). function four arguments: countries, requiring vector code(s) import_eea_countries(). cities, requiring vector code(s) import_eea_cities(). pollutants, requiring vector code(s) import_eea_pollutants(). dataset, requiring value either 1 (unratified, --date data data flow E2a), 2 (ratified data data flow E1a) 3 (Historical Airbase data). recommended users provide least one country, leaving NULL likely import data typical R session can handle. import_eea_monitoring() quite opinionated function; uses specific method acquire data, renames columns convenient English names, binds commonly useful metadata columns import_eea_stations(). user wants flexibility, may wish access EEA’s API directly.","code":""},{"path":"https://openair-project.github.io/euroaq/articles/euroaq.html","id":"data-access-via-api-endpoints","dir":"Articles","previous_headings":"","what":"Data Access via API Endpoints","title":"Importing EEA AQ Data with {euroaq}","text":"flexible data access, including asynchronous data access, three options, mirroring three options outlined https://eeadmz1-downloads-webapp.azurewebsites.net/content/documentation/How_To_Downloads.pdf. options control data imported (countries & cities), specific pollutants import, datasets origin. Two three also allow users specify start end date, well aggregation type. get_eea_parquet_files() download zip folder parquet files user-specified file, returning file path. get_eea_parquet_async() initiate construction zip folder parquet files returns URL zip file eventually available. get_eea_parquet_urls() return R character vector list URLs individual parquet files can found. function ignores datetime aggregation type arguments.","code":"get_eea_parquet_files(file = \"mydata.zip\")  zip::unzip(zipfile = \"mydata.zip\", exdir = \"parquets\")  paths <- dir(\"parquets\", recursive = TRUE, full.names = TRUE)  tables <- purrr::map(.x = paths, .f = arrow::read_parquet)  aqdata <- dplyr::bind_rows(tables) zippath <- get_eea_parquet_async()  # wait for zip to be populated  download.file(url = zippath, destfile = \"mydata.zip\")  zip::unzip(zipfile = \"mydata.zip\", exdir = \"parquets\")  paths <- dir(\"parquets\", recursive = TRUE, full.names = TRUE)  tables <- purrr::map(.x = paths, .f = arrow::read_parquet)  aqdata <- dplyr::bind_rows(tables) urls <- get_eea_parquet_urls()  tables <- purrr::map(.x = urls, .f = arrow::read_parquet)  aqdata <- dplyr::bind_rows(tables)"},{"path":"https://openair-project.github.io/euroaq/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jack Davison. Author, maintainer.","code":""},{"path":"https://openair-project.github.io/euroaq/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Davison J (2025). euroaq: Access Air Quality Data EEA Air Quality Download Service. R package version 0.1.0, https://github.com/openair-project/euroaq.","code":"@Manual{,   title = {euroaq: Access Air Quality Data from the EEA Air Quality Download Service},   author = {Jack Davison},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/openair-project/euroaq}, }"},{"path":[]},{"path":[]},{"path":"https://openair-project.github.io/euroaq/index.html","id":"id_-core-features","dir":"","previous_headings":"","what":"💡 Core Features","title":"Access Air Quality Data from the EEA Air Quality Download Service","text":"euroaq imports air quality data EEA’s Air Quality Downloads service API. Access --date historic European AQ monitoring data import_eea_monitoring(). Access AQ station metadata data flow D import_eea_stations(). Call API directly collection convenient R wrappers API endpoint. ℹ️ package compatible version 0.8 AQ Downloads service, released 2025-03-31. newer version released, please raise issue isn’t already one.","code":""},{"path":"https://openair-project.github.io/euroaq/index.html","id":"id_-documentation","dir":"","previous_headings":"","what":"📖 Documentation","title":"Access Air Quality Data from the EEA Air Quality Download Service","text":"euroaq functions fully documented; access documentation using R IDE choice. Documentation also hosted online package website.  guide openair toolkit can found online book, contains lots code snippets, demonstrations functionality, ideas application openair’s various functions.","code":"?euroaq::import_eea_monitoring"},{"path":"https://openair-project.github.io/euroaq/index.html","id":"id_️-installation","dir":"","previous_headings":"","what":"🗃️ Installation","title":"Access Air Quality Data from the EEA Air Quality Download Service","text":"euroaq yet CRAN. development version euroaq can installed GitHub using pak: 🏛️ euroaq primarily maintained Jack Davison. 📃 euroaq licensed MIT License. 🧑‍💻 Contributions welcome wider community. See contributing guide code conduct information.","code":"# install.packages(\"pak\") pak::pak(\"openair-project/euroaq\")"},{"path":"https://openair-project.github.io/euroaq/reference/api-info.html","id":null,"dir":"Reference","previous_headings":"","what":"Access information about the EEA Air Quality Download Service API — get_eea_ddb_extension_info","title":"Access information about the EEA Air Quality Download Service API — get_eea_ddb_extension_info","text":"functions immediately useful downloading air quality data, provide assorted information EEA AQ database.","code":""},{"path":"https://openair-project.github.io/euroaq/reference/api-info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access information about the EEA Air Quality Download Service API — get_eea_ddb_extension_info","text":"","code":"get_eea_ddb_extension_info()  get_eea_ddb_vars()  get_eea_version()"},{"path":"https://openair-project.github.io/euroaq/reference/api-info.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Access information about the EEA Air Quality Download Service API — get_eea_ddb_extension_info","text":"Jack Davison","code":""},{"path":"https://openair-project.github.io/euroaq/reference/download-parquet.html","id":null,"dir":"Reference","previous_headings":"","what":"Import sampling data from the EEA Air Quality Download Service API — get_eea_parquet_files","title":"Import sampling data from the EEA Air Quality Download Service API — get_eea_parquet_files","text":"functions wrappers 'ParquetFile' endpoints European Environment Agency's Air Quality Download Service API. get_eea_parquet_files() downloads zip file filtered parquet files . get_eea_parquet_async() prepares background; function returns URL file downloaded generated. get_eea_parquet_urls() returns list URLs corresponding filtered parquets. get_eea_summary() estimates number files size, return data. get_eea_country_city_spos() returns list sampling points meeting criteria.","code":""},{"path":"https://openair-project.github.io/euroaq/reference/download-parquet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import sampling data from the EEA Air Quality Download Service API — get_eea_parquet_files","text":"","code":"get_eea_parquet_files(   countries = \"AD\",   cities = NULL,   pollutants = NULL,   datetime_start = as.integer(format(Sys.Date(), \"%Y\")) - 1,   datetime_end = as.integer(format(Sys.Date(), \"%Y\")),   dataset = 1L,   aggregation_type = \"hour\",   email = NULL,   dynamic = FALSE,   file = tempfile(fileext = \".zip\") )  get_eea_parquet_async(   countries = \"AD\",   cities = NULL,   pollutants = NULL,   datetime_start = as.integer(format(Sys.Date(), \"%Y\")) - 1,   datetime_end = as.integer(format(Sys.Date(), \"%Y\")),   dataset = 1L,   aggregation_type = \"hour\",   email = NULL,   dynamic = FALSE )  get_eea_parquet_urls(   countries = \"AD\",   cities = NULL,   pollutants = NULL,   datetime_start = as.integer(format(Sys.Date(), \"%Y\")) - 1,   datetime_end = as.integer(format(Sys.Date(), \"%Y\")),   dataset = 1L,   aggregation_type = \"hour\",   email = NULL )  get_eea_country_city_spos(   countries = \"AD\",   cities = NULL,   pollutants = NULL,   datetime_start = as.integer(format(Sys.Date(), \"%Y\")) - 1,   datetime_end = as.integer(format(Sys.Date(), \"%Y\")),   dataset = 1L,   aggregation_type = \"hour\",   email = NULL )  get_eea_summary(   countries = \"AD\",   cities = NULL,   pollutants = NULL,   datetime_start = as.integer(format(Sys.Date(), \"%Y\")) - 1,   datetime_end = as.integer(format(Sys.Date(), \"%Y\")),   dataset = 1L,   aggregation_type = \"hour\",   email = NULL )"},{"path":"https://openair-project.github.io/euroaq/reference/download-parquet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import sampling data from the EEA Air Quality Download Service API — get_eea_parquet_files","text":"countries vector country codes import_eea_countries(). NULL, data countries imported. cities vector cities given countries import_eea_cities(). NULL, data cities given countries imported. pollutants vector pollutant notations IDs import_eea_pollutants(). NULL, data pollutants imported. datetime_start, datetime_end Start end date times, provided POSIXct, Date integer R objects. integer provided, represent year interest; datetime_start represent first hour year datetime_end represent last hour year, meaning providing integer return year data. dataset value dataset. One : Unverified data transmitted continuously (--Date/UTD/E2a) data beginning year. Verified data (E1a) 2013, reported countries 30 September year previous year. Historical Airbase data delivered 2002 2012 Air Quality Directive 2008/50/EC entered force aggregation_type represents whether data collected obtaining values: Hourly data (\"hour\"). Daily data (\"day\"). Variable intervals (different previous observations weekly, monthly, etc.) (\"var\"). email Optional field identify user make download improve communication problems detected. dynamic TRUE, use dynamic engine create single parquet file containing results rather downloading many separate parquet files. file file write zip file ; ideally end \".zip\". Defaults temporary file using tempfile().","code":""},{"path":"https://openair-project.github.io/euroaq/reference/download-parquet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import sampling data from the EEA Air Quality Download Service API — get_eea_parquet_files","text":"One : get_eea_parquet_files(): file argument - path downloaded ZIP file. get_eea_parquet_async(): path URL ZIP file made available. get_eea_parquet_urls(): character vector URLS parquet file. get_eea_summary(): numeric list, names numberFiles size. get_eea_country_city_spos(): data.frame containing country & sampling_point_id.","code":""},{"path":"https://openair-project.github.io/euroaq/reference/download-parquet.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import sampling data from the EEA Air Quality Download Service API — get_eea_parquet_files","text":"Jack Davison","code":""},{"path":"https://openair-project.github.io/euroaq/reference/eea-metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Import metadata files from the EEA Air Quality Download Service — import_eea_cities","title":"Import metadata files from the EEA Air Quality Download Service — import_eea_cities","text":"collection functions import information available countries, cities pollutants, formatting tibbles.","code":""},{"path":"https://openair-project.github.io/euroaq/reference/eea-metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import metadata files from the EEA Air Quality Download Service — import_eea_cities","text":"","code":"import_eea_cities(country)  import_eea_countries()  import_eea_pollutants()"},{"path":"https://openair-project.github.io/euroaq/reference/eea-metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import metadata files from the EEA Air Quality Download Service — import_eea_cities","text":"country vector country codes import_eea_countries(). used import_eea_cities().","code":""},{"path":"https://openair-project.github.io/euroaq/reference/eea-metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import metadata files from the EEA Air Quality Download Service — import_eea_cities","text":"tibble","code":""},{"path":"https://openair-project.github.io/euroaq/reference/eea-metadata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import metadata files from the EEA Air Quality Download Service — import_eea_cities","text":"Jack Davison","code":""},{"path":"https://openair-project.github.io/euroaq/reference/euroaq-package.html","id":null,"dir":"Reference","previous_headings":"","what":"euroaq: Access Air Quality Data from the EEA Air Quality Download Service — euroaq-package","title":"euroaq: Access Air Quality Data from the EEA Air Quality Download Service — euroaq-package","text":"Access data European Environment Agency's Air Quality Download Service (https://eeadmz1-downloads-webapp.azurewebsites.net/) providing convenient R wrappers API endpoints.","code":""},{"path":[]},{"path":"https://openair-project.github.io/euroaq/reference/euroaq-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"euroaq: Access Air Quality Data from the EEA Air Quality Download Service — euroaq-package","text":"Maintainer: Jack Davison jack.davison@ricardo.com (ORCID)","code":""},{"path":"https://openair-project.github.io/euroaq/reference/import_eea_monitoring.html","id":null,"dir":"Reference","previous_headings":"","what":"Conveniently import European Air Quality data into R — import_eea_monitoring","title":"Conveniently import European Air Quality data into R — import_eea_monitoring","text":"function convenient way use EEA AQ monitoring data R session. calls get_eea_parquet_files(), reads file using nanoparquet::read_parquet(), removes unnecessary columns, merges useful columns import_eea_stations().","code":""},{"path":"https://openair-project.github.io/euroaq/reference/import_eea_monitoring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conveniently import European Air Quality data into R — import_eea_monitoring","text":"","code":"import_eea_monitoring(   countries = \"AD\",   cities = NULL,   pollutants = NULL,   datetime_start = as.integer(format(Sys.Date(), \"%Y\")) - 1,   datetime_end = as.integer(format(Sys.Date(), \"%Y\")),   dataset = 1L,   aggregation_type = \"hour\" )"},{"path":"https://openair-project.github.io/euroaq/reference/import_eea_monitoring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conveniently import European Air Quality data into R — import_eea_monitoring","text":"countries vector country codes import_eea_countries(). NULL, data countries imported. cities vector cities given countries import_eea_cities(). NULL, data cities given countries imported. pollutants vector pollutant notations IDs import_eea_pollutants(). NULL, data pollutants imported. datetime_start, datetime_end Start end date times, provided POSIXct, Date integer R objects. integer provided, represent year interest; datetime_start represent first hour year datetime_end represent last hour year, meaning providing integer return year data. dataset value dataset. One : Unverified data transmitted continuously (--Date/UTD/E2a) data beginning year. Verified data (E1a) 2013, reported countries 30 September year previous year. Historical Airbase data delivered 2002 2012 Air Quality Directive 2008/50/EC entered force aggregation_type represents whether data collected obtaining values: Hourly data (\"hour\"). Daily data (\"day\"). Variable intervals (different previous observations weekly, monthly, etc.) (\"var\").","code":""},{"path":"https://openair-project.github.io/euroaq/reference/import_eea_monitoring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conveniently import European Air Quality data into R — import_eea_monitoring","text":"tibble","code":""},{"path":"https://openair-project.github.io/euroaq/reference/import_eea_monitoring.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conveniently import European Air Quality data into R — import_eea_monitoring","text":"Jack Davison","code":""},{"path":"https://openair-project.github.io/euroaq/reference/import_eea_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Air Quality Site Metadata from Dataflow D — import_eea_stations","title":"Import Air Quality Site Metadata from Dataflow D — import_eea_stations","text":"Imports data data flow D data viewer. useful binding onto datasets obtained using get_eea_parquet_files() assign monitoring data relevant site information. Metadata can filtered providing countries cities arguments.","code":""},{"path":"https://openair-project.github.io/euroaq/reference/import_eea_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Air Quality Site Metadata from Dataflow D — import_eea_stations","text":"","code":"import_eea_stations(countries = NULL, cities = NA, ..., .cache = TRUE)"},{"path":"https://openair-project.github.io/euroaq/reference/import_eea_stations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Air Quality Site Metadata from Dataflow D — import_eea_stations","text":"countries vector country codes import_eea_countries(). NULL, data countries imported. cities vector cities given countries import_eea_cities(). NULL, data cities given countries imported. ... currently used; reserved future functionality. .cache function works installing CSV temporary directory reading R. .cache TRUE, occurs per R session. .cache FALSE, CSV re-downloaded every time function called.","code":""},{"path":"https://openair-project.github.io/euroaq/reference/import_eea_stations.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import Air Quality Site Metadata from Dataflow D — import_eea_stations","text":"Jack Davison","code":""},{"path":"https://openair-project.github.io/euroaq/news/index.html","id":"euroaq-010","dir":"Changelog","previous_headings":"","what":"euroaq 0.1.0","title":"euroaq 0.1.0","text":"Initial public, non-CRAN release euroaq.","code":""}]
